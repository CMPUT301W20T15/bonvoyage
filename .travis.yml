language: android
jdk: oraclejdk8

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

env:
  global:
    - ANDROID_TARGET=android-22
    - ANDROID_ABI=armeabi-v7a
script:
   - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then bash ./travis/run_on_pull_requests; fi'
   - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then bash ./travis/run_on_non_pull_requests; fi'
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-23.0.3

    # The SDK version used to compile your project
    # TODO: why is this here explicitly in addition to $ANDROID_TARGET below
    - android-23

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # The SDK version used to compile your project
    - $ANDROID_TARGET

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests.
    # The line should look like this after interpolation:
    # - sys-img-armeabi-v7a-android-22
    - sys-img-${ANDROID_ABI}-${ANDROID_TARGET}

licenses:
  - 'android-sdk-license-.+'

before_install:
  # Accept sdk licenses
  - yes | sdkmanager "platforms;android-29"

  # Start the emulator
  - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

  # The app will now automatically be installed and tested via
  # the command `gradle connectedCheck`